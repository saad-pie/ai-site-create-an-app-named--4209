document.addEventListener('DOMContentLoaded', () => {const newTaskInput = document.getElementById('newTaskInput');const addTaskButton = document.getElementById('addTaskButton');const taskList = document.getElementById('taskList');let tasks = JSON.parse(localStorage.getItem('aurafarmingTasks')) || [];function saveTasks() {localStorage.setItem('aurafarmingTasks', JSON.stringify(tasks));}function renderTasks() {taskList.innerHTML = '';tasks.forEach((task, index) => {const li = document.createElement('li');li.className = `task-item ${task.completed ? 'completed' : ''}`;li.dataset.index = index;const taskTextSpan = document.createElement('span');taskTextSpan.textContent = task.text;const taskActionsDiv = document.createElement('div');taskActionsDiv.className = 'task-actions';const completeButton = document.createElement('button');completeButton.className = 'complete-btn';completeButton.innerHTML = task.completed ? '&#10003;' : '&#x2713;';completeButton.title = task.completed ? 'Mark as Incomplete' : 'Mark as Complete';completeButton.addEventListener('click', () => toggleTaskComplete(index));const deleteButton = document.createElement('button');deleteButton.className = 'delete-btn';deleteButton.innerHTML = '&#x2715;';deleteButton.title = 'Delete Task';deleteButton.addEventListener('click', () => deleteTask(index));taskActionsDiv.appendChild(completeButton);taskActionsDiv.appendChild(deleteButton);li.appendChild(taskTextSpan);li.appendChild(taskActionsDiv);taskList.appendChild(li);});}function addTask() {const taskText = newTaskInput.value.trim();if (taskText !== '') {tasks.push({ text: taskText, completed: false });newTaskInput.value = '';saveTasks();renderTasks();}}function toggleTaskComplete(index) {tasks[index].completed = !tasks[index].completed;saveTasks();renderTasks();}function deleteTask(index) {tasks.splice(index, 1);saveTasks();renderTasks();}addTaskButton.addEventListener('click', addTask);newTaskInput.addEventListener('keypress', (event) => {if (event.key === 'Enter') {addTask();}});renderTasks();});